{"version":3,"sources":["config/apiUrl.js","pages/Login/index.jsx","pages/AddArticle/index.jsx","pages/ArticleList/index.jsx","pages/AdminIndex/index.jsx","Router.js","index.js"],"names":["ipUrl","servicePath","checkLogin","getTypeInfo","getArticleList","addArticle","updateArticle","deleteArticle","detailArticle","Login","props","useState","userName","setUserName","password","setPassword","loading","setLoading","className","tip","spinning","title","bordered","style","width","id","size","placeholder","prefix","type","value","onChange","e","target","marginBottom","block","onClick","message","error","dataProps","axios","method","url","data","withCredentials","then","res","localStorage","setItem","openId","history","push","Option","Select","TextArea","Input","AddArticle","articleId","setArticleId","articleTitle","setArticleTitle","articleContent","setArticleContent","markdownContent","setMarkdownContent","introducemd","setIntroducemd","introducehtml","setIntroducehtml","showDate","setShowDate","typeInfo","setTypeInfo","selectedType","setSelectType","marked","setOptions","renderer","Renderer","gfm","pedantic","sanitize","tables","breaks","smartLists","smartypants","useEffect","console","log","tmpId","location","search","split","getArticleById","header","article_content","html","introduce","tmpInt","addTime","type_id","removeItem","changeContent","changeIntroduce","gutter","span","defaultValue","map","item","index","key","typeName","onPressEnter","rows","dangerouslySetInnerHTML","__html","view_count","Math","ceil","random","status","insertId","success","date","dateString","ArticleList","Modal","confirm","list","setList","getList","dataSource","renderItem","Item","moment","format","part_count","placement","onConfirm","okText","cancelText","Header","Layout","Content","Footer","Sider","SubMenu","Menu","AdminIndex","collapsed","setCollapsed","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","background","padding","margin","path","exact","component","textAlign","RouterMap","ReactDOM","render","Router","document","getElementById"],"mappings":"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","file":"static/js/main.9a3ad238.chunk.js","sourcesContent":["let ipUrl = 'http://47.99.134.126:7001/admin/'\n\nlet servicePath = {\n  checkLogin: `${ipUrl}login`, // 登录接口\n  getTypeInfo: `${ipUrl}type_info`,  //  获得文章类别信息\n  getArticleList: `${ipUrl}get_article_list`, // 获取列表\n  addArticle: `${ipUrl}add_article`, // 添加文章\n  updateArticle: `${ipUrl}update_article`, // 更新文章\n  deleteArticle: `${ipUrl}delete_article`, // 删除文章\n  detailArticle: `${ipUrl}detail` // 获取文章详情\n}\n\nexport default servicePath","import React, { useState } from 'react'\nimport { Card, Input, Icon, Spin, Button, message } from 'antd'\nimport axios from 'axios'\nimport servicePath from '../../config/apiUrl'\nimport './style.css'\n\nconst Login = (props) => {\n  const [ userName, setUserName ] = useState('')\n  const [ password, setPassword ] = useState('')\n  const [ loading, setLoading ] = useState(false)\n\n  const checkLogin = () => {\n    setLoading(true)\n    if(!userName){\n      message.error('用户名不能为空')\n      return false\n    }else if(!password){\n      message.error('密码不能为空')\n      return false\n    }\n    let dataProps = {\n      'userName':userName,\n      'password':password\n    }\n    axios({\n        method: 'post',\n        url: servicePath.checkLogin,\n        data: dataProps,\n        withCredentials: true\n    }).then(\n      res=>{\n        setLoading(false)\n        if(res.data.data == '登录成功'){\n            localStorage.setItem('openId',res.data.openId)\n            props.history.push('/index')\n        }else{\n            message.error('用户名密码错误')\n        }\n      }\n    )\n  }\n\n  return <div className='login-container'>\n    <Spin tip='Loading...' spinning={loading}>\n      <Card title='陈尼克博客系统' bordered={true} style={{ width: 400 }}>\n        <Input\n          id='userName'\n          size='large'\n          placeholder='请输入用户名'\n          prefix={<Icon type='user' />}\n          value={userName}\n          onChange={(e) => setUserName(e.target.value)}\n          style={{ marginBottom: 20 }}\n        />\n        <Input\n          id='password'\n          size='large'\n          placeholder='请输入密码'\n          prefix={<Icon type='lock' />}\n          value={password}\n          type='password'\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <br/>\n        <br/>\n        <Button block type='primary' size='large' onClick={checkLogin}>提交</Button>\n      </Card>\n    </Spin>\n  </div>\n}\n\nexport default Login","import React, { useState, useEffect } from 'react'\nimport { Row, Col ,Input, Select, Button, DatePicker, message } from 'antd'\nimport axios from 'axios'\nimport servicePath from '../../config/apiUrl'\nimport marked from 'marked'\n\nimport './style.css'\n\nconst { Option } = Select\nconst { TextArea } = Input\n\nconst AddArticle = (props) => {\n  const [articleId, setArticleId] = useState(0)  // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\n  const [articleTitle, setArticleTitle] = useState('')   //文章标题\n  const [articleContent , setArticleContent] = useState('')  //markdown的编辑内容\n  const [markdownContent, setMarkdownContent] = useState('预览内容') //html内容\n  const [introducemd, setIntroducemd] = useState()            //简介的markdown内容\n  const [introducehtml, setIntroducehtml] = useState('等待编辑') //简介的html内容\n  const [showDate, setShowDate] = useState('')   //发布日期\n  const [updateDate, setUpdateDate] = useState() //修改日志的日期\n  const [typeInfo ,setTypeInfo] = useState([]) // 文章类别信息\n  const [selectedType, setSelectType] = useState(2) //选择的文章类别\n  \n  marked.setOptions({\n    renderer: new marked.Renderer(),\n    gfm: true,\n    pedantic: false,\n    sanitize: false,\n    tables: true,\n    breaks: false,\n    smartLists: true,\n    smartypants: false,\n  })\n\n  useEffect(() => {\n    getTypeInfo()\n    //获得文章ID\n    console.log('props', props)\n    let tmpId = props.location.search ? props.location.search.split('?')[1].split('=')[1] : null\n    console.log('tmpId', tmpId)\n    if (tmpId) {\n      setArticleId(tmpId)\n      getArticleById(tmpId)\n    } \n  }, [])\n\n  const getArticleById = (id) => {\n    axios({\n      url: `${servicePath.detailArticle}/${id}`,\n      withCredentials: true,\n      header:{ 'Access-Control-Allow-Origin':'*' }\n    }).then(res => {\n        res = res.data\n        if (res.data == \"没有登录\") {\n          props.push('/login/')\n        }else{\n          setArticleTitle(res.data.title)\n          setArticleContent(res.data.article_content)\n          let html = marked(res.data.article_content)\n          setMarkdownContent(html)\n          setIntroducemd(res.data.introduce)\n          let tmpInt = marked(res.data.introduce)\n          setIntroducehtml(tmpInt)\n          setShowDate(res.data.addTime)\n          setSelectType(res.data.type_id)\n        }\n      }\n    )\n  }\n\n  const getTypeInfo = () => {\n    axios({\n      method: 'get',\n      url: servicePath.getTypeInfo,\n      withCredentials: true\n    }).then(res => {\n        if (res.data.data == \"没有登录\") {\n          localStorage.removeItem('openId')\n          props.history.push('/')  \n        }else{\n          setTypeInfo(res.data.data)\n        }\n      }\n    )\n  }\n\n  const changeContent = (e)=>{\n    setArticleContent(e.target.value)\n    let html = marked(e.target.value)\n    setMarkdownContent(html)\n  }\n\n  const changeIntroduce = (e)=>{\n    setIntroducemd(e.target.value)\n    let html = marked(e.target.value)\n    setIntroducehtml(html)\n  }\n\n  const saveArticle = () => {\n    if(!selectedType){\n        message.error('必须选择文章类别')\n        return false\n    }else if(!articleTitle){\n        message.error('文章名称不能为空')\n        return false\n    }else if(!articleContent){\n        message.error('文章内容不能为空')\n        return false\n    }else if(!introducemd){\n        message.error('简介不能为空')\n        return false\n    }else if(!showDate){\n        message.error('发布日期不能为空')\n        return false\n    }\n    // {\n    //   \"title\": \"我是帅哥\",\n    //   \"type_id\": 2,\n    //   \"introduce\": \"这是一个postman创建的文章\",\n    //   \"article_content\": \"爸爸吃酒我吃肉\",\n    //   \"view_count\": \"291\"\n    // }\n    let dataProps = {}   //传递到接口的参数\n    dataProps.type_id = selectedType \n    dataProps.title = articleTitle\n    dataProps.article_content = articleContent\n    dataProps.introduce =introducemd\n    dataProps.addTime = showDate\n\n    if(articleId == 0){\n      dataProps.view_count = Math.ceil(Math.random() * 100) + 1000\n      axios({\n        method: 'post',\n        url: servicePath.addArticle,\n        data: dataProps,\n        withCredentials: true\n      }).then(res => {\n          if (res.data.status == 200) {\n            setArticleId(res.data.data.insertId)\n            message.success('文章保存成功')\n          } else {\n            message.error('文章保存失败');\n          }\n        }\n      )\n    } else {\n      dataProps.view_count = Math.ceil(Math.random() * 100) + 1000\n      dataProps.id = articleId\n      axios({\n        method: 'post',\n        url: servicePath.updateArticle,\n        data: dataProps,\n        withCredentials: true\n      }).then(res => {\n          if (res.data.status == 200) {\n            setArticleId(res.data.data.insertId)\n            message.success('文章更新成功')\n          } else {\n            message.error('文章更新失败');\n          }\n        }\n      )\n    }\n  }\n  return <div>\n    <Row gutter={5}>\n      <Col span={18}>\n        <Row gutter={10} >\n          <Col span={20}>\n            <Input\n              placeholder=\"博客标题\"\n              value={articleTitle}\n              size=\"large\"\n              onChange={e => { setArticleTitle(e.target.value) }}\n            />\n          </Col>\n          <Col span={4}>\n            <Select defaultValue={selectedType} size=\"large\" onChange={setSelectType}>\n              {\n                typeInfo.map((item, index) => {\n                    return (<Option key={index} value={item.id}>{item.typeName}</Option>)\n                })\n              }\n            </Select>\n          </Col>\n        </Row>\n        <br/>\n        <Row gutter={10} >\n          <Col span={12}>\n            <TextArea\n              value={articleContent}\n              onChange={changeContent} \n              onPressEnter={changeContent}\n              className=\"markdown-content\"\n              rows={35}\n              placeholder=\"文章内容\"\n            />\n          </Col>\n          <Col span={12}>\n            <div className=\"show-html\" dangerouslySetInnerHTML={{__html:markdownContent}}></div>\n          </Col>\n        </Row>  \n      </Col>\n      <Col span={6}>\n        <Row>\n          <Col span={24}>\n            <Button size=\"large\">暂存文章</Button>&nbsp;\n            <Button type=\"primary\" size=\"large\" onClick={saveArticle}>发布文章</Button>\n            <br/>\n          </Col>\n          <Col span={24}>\n            <br/>\n            <TextArea\n              value={introducemd}  \n              onChange={changeIntroduce} \n              onPressEnter={changeIntroduce}\n              rows={4}\n              placeholder=\"文章简介\" />\n            <br/><br/>\n            <div\n              className=\"introduce-html\"\n              dangerouslySetInnerHTML = {{__html:'文章简介：'+introducehtml}}></div>\n          </Col>\n          <Col span={12}>\n            <div className=\"date-select\">\n              <DatePicker\n                onChange={(date, dateString) => setShowDate(dateString)}\n                placeholder=\"发布日期\"\n                size=\"large\"\n              />\n            </div>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  </div>\n}\n\nexport default AddArticle","import React, { useState, useEffect} from 'react'\nimport { List, Row, Col, Modal, message, Button, Popconfirm } from 'antd'\nimport axios from 'axios'\nimport moment from 'moment'\nimport  servicePath  from '../../config/apiUrl'\n\nimport './style.css'\nconst { confirm } = Modal\n\nconst ArticleList = (props) => {\n  const [list, setList]=useState([])\n\n  const getList = () => {\n    axios({\n      method: 'get',\n      url: servicePath.getArticleList,\n      withCredentials: true\n    }).then(res => {\n        if (res.data.data == \"没有登录\") {\n           props.push('/login')\n        } else {\n          setList(res.data.list)\n        }\n      }\n    )\n  }\n\n  const deleteArticle = (id) => {\n    axios({\n      method: 'post',\n      url: servicePath.deleteArticle,\n      data: { id: id },\n      withCredentials: true\n    }).then(res => {\n        if (res.data.data == \"没有登录\") {\n           props.push('/login')\n        } else {\n          getList()\n        }\n      }\n    )\n  }\n\n  //修改文章\n  const updateArticle = (id, checked) => {\n    props.history.push('/index/add?id='+id)\n  }\n\n  useEffect(() => {\n    getList()\n  }, [])\n  \n\n  return <div>\n    <List\n      header={\n        <Row className=\"list-div\">\n          <Col span={8}>\n            <b>标题</b>\n          </Col>\n          <Col span={3}>\n            <b>类别</b>\n          </Col>\n          <Col span={3}>\n            <b>发布时间</b>\n          </Col>\n          <Col span={3}>\n            <b>集数</b>\n          </Col>\n          <Col span={3}>\n            <b>浏览量</b>\n          </Col>\n          <Col span={4}>\n            <b>操作</b>\n          </Col>\n        </Row>\n      }\n      bordered\n      dataSource={list}\n      renderItem={item => (\n        <List.Item>\n          <Row className=\"list-div\">\n            <Col span={8}>\n              {item.title}\n            </Col>\n            <Col span={3}>\n              {item.typeName}\n            </Col>\n            <Col span={3}>\n              {moment(item.addTime).format('YYYY-MM-DD')}\n            </Col>\n            <Col span={3}>\n              共<span>{item.part_count}</span>集\n            </Col>\n            <Col span={3}>\n              {item.view_count}\n            </Col>\n            <Col span={4}>\n              <Button type=\"primary\" onClick={() => updateArticle(item.id)} >修改</Button>&nbsp;\n              <Popconfirm placement=\"top\" title={'是否确认删除文章？'} onConfirm={() => deleteArticle(item.id)} okText=\"确认\" cancelText=\"取消\">\n                <Button>删除 </Button>\n              </Popconfirm>\n            </Col>\n          </Row>\n        </List.Item>\n      )}\n      />\n  </div>\n}\n\nexport default ArticleList","import React, { useState } from 'react'\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\nimport { Route } from 'react-router-dom'\nimport AddArticle from '../AddArticle/index'\nimport ArticleList from '../ArticleList/index'\n\nimport './style.css'\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst AdminIndex = (props) => {\n  const [collapsed, setCollapsed] = useState(false)\n\n  const onCollapse = collapsed => {\n    setCollapsed(collapsed)\n  };\n\n  const handleClickArticle = (e) => {\n    if (e.key == 'addArticle') {\n      props.history.push('/index/add')\n    } else {\n      props.history.push('/index/list/')\n    }\n  }\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n        <div className=\"blog-logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n          <Menu.Item key=\"1\">\n            <Icon type=\"pie-chart\" />\n            <span>工作台</span>\n          </Menu.Item>\n          <SubMenu\n            key=\"sub1\"\n            onClick={handleClickArticle}\n            title={\n              <span>\n                <Icon type=\"user\" />\n                <span>文章管理</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"addArticle\">添加文章</Menu.Item>\n            <Menu.Item key=\"articleList\">文章列表</Menu.Item>\n          </SubMenu>\n          <Menu.Item key=\"9\">\n            <Icon type=\"file\" />\n            <span>留言管理</span>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header style={{ background: '#fff', padding: 0 }} />\n        <Content style={{ margin: '0 16px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>后台管理系统</Breadcrumb.Item>\n            <Breadcrumb.Item>工作台</Breadcrumb.Item>\n          </Breadcrumb>\n          <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n            <div>\n              <Route path='/index/' exact component={AddArticle} />\n              <Route path='/index/add/' component={AddArticle} />\n              <Route path=\"/index/list/\" component={ArticleList} />\n            </div>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>chennick</Footer>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default AdminIndex","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Login from './pages/Login/index'\nimport AdminIndex from './pages/AdminIndex/index'\n\nconst RouterMap = () => {\n  return (\n    <Router>\n      <Route path='/login' exact component={Login} />\n      <Route path='/index' component={AdminIndex} />\n    </Router>\n  )\n}\n\nexport default RouterMap","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RouterMap from './Router'\nimport 'antd/dist/antd.css'\n\nReactDOM.render(<RouterMap />, document.getElementById('root'));"],"sourceRoot":""}